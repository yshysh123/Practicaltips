import React from 'react'
import PropTypes from 'prop-types'
import { Form, Button } from 'antd'
import { inject, observer } from 'mobx-react'
import reduce from 'lodash/reduce'
import castArray from 'lodash/castArray'
import url from 'url'
import Moment from 'moment'

/* 该组件解决的几个问题
 * 1、搜索表单onSubmit时自动获取里面所有选项的值对象
 * 2、通过添加<input type="submit" />隐藏项目，自动添加表单内键盘回车提交功能
 * 3、在搜索时自动添加表单级别遮照层，并在搜索完成后自动解除
 * 4、在提交时自动将空值过滤掉，避免搜索空值
 *
 * 使用方法：
 * 在组建中使用SearchForm代替antd的Form
 *
 * */
@inject('store')
@observer
export default class SearchForm extends React.Component {
  static propTypes = {
    form: PropTypes.object.isRequired,
  }

  state = {
    searching: false,
  }

  // 从querystring上取值并回填回表单
  componentDidMount() {
    const {
      form,
      store: {
        router: { location },
      },
    } = this.props
    let query = url.parse(location.search, true).query
    const currentValues = form.getFieldsValue()
    query = reduce(
      query,
      (r, v, k) => {
        if (v) {
          if (/^\d{4}-\d{2}-\d{2}/.test(v)) {
            r[k] = Moment(v)
          } else if (Array.isArray(currentValues[k])) {
            r[k] = castArray(v)
          } else {
            r[k] = v
          }
        }
        return r
      },
      {},
    )
    console.log(query)
    console.log(currentValues)
    if (query && Object.keys(query).length > 0) {
      form.setFieldsValue(query)
      console.log(form.getFieldsValue())
      global.form = form
    }
  }

  onSubmit = e => {
    e.preventDefault()
    const {
      form,
      onSubmit,
      store: {
        router: { push, location },
      },
    } = this.props
    // 过滤掉空值
    const values = reduce(
      form.getFieldsValue(),
      (r, v, k) => {
        if (v) {
          if (v instanceof Moment) {
            r[k] = v.format('YYYY-MM-DD')
          } else {
            r[k] = v
          }
        }
        return r
      },
      {},
    )
    // 空值则不搜索
    if (Object.keys(values).length === 0) {
      return
    }
    push({
      search: url.format({ query: values }),
      hash: location.hash,
    })
    this.setState({
      searching: true,
    })
    onSubmit(values).finally(() => {
      this.setState({
        searching: false,
      })
    })
  }

  render() {
    const { form, onSubmit, children, ...props } = this.props
    return (
      <Form onSubmit={this.onSubmit} {...props}>
        {children}
        <input type="submit" className="hidden" />
        <Form.Item>
          <Button loading={this.state.searching} htmlType="submit">
            搜索
          </Button>
        </Form.Item>
      </Form>
    )
  }
}
