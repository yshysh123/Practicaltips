import { types, getParent } from 'mobx-state-tree';
import { observable, toJS } from 'mobx';
import { fetchData } from 'flarej/lib/utils/fetchConfig';
import Notification from './notification';
import Message from 'flarej/lib/components/antd/message';

const FetchStore = types
  .model('FetchStore', {
    bool: types.optional(types.boolean, true), // 布尔类型声明
    strs: types.optional(types.string, ''), // 字符串类型声明
    arrs: types.optional(types.array(types.string), []), // 数组类型声明
  })
  .volatile(self => ({}))
  .views(self => {
    return {
      get common() {
        return getParent(self).common;
      },
    };
  })
  .actions(self => {
    return {
      getFetchData(
        url,
        callback,
        params = {},
        cfgs = { methods: 'get' },
        closeLoading = false,
      ) {
        let callbackNew = function(result) {
          if (closeLoading) {
            self.common.getLoading(false);
          }
          if (result.code == '000000') {
            callback(result);
          } else if (result.code == '501') {
          } else {
            Notification.error({
              description: '获取数据出错，错误是:' + result.message,
              duration: 3,
            });
          }
        };
        return fetchData(url, callbackNew, params, cfgs).catch(ex => {
          if (closeLoading) {
            self.common.getLoading(false);
          }
          Notification.error({
            description: '获取数据出错，错误是:' + ex,
            duration: 3,
          });
        });
      },
    };
  });

export default FetchStore;

