state = {
  numPages: 24,
  pageNumber: 1,
}

onDocumentLoad = ({ numPages }) => {
  this.setState({ numPages });
  // $('.ReactPDF__Page__canvas').css('margin','0 auto');
  // $('.ReactPDF__Page__canvas').css('width','auto');
  // $('.ReactPDF__Page__canvas').css('height','auto');
}

@autobind
upPage(){
  const { pageNumber, numPages } = this.state;
  if(pageNumber>1){
    let pageNoUp = pageNumber;
    this.setState({ pageNumber:pageNoUp-1 });
  }
}

@autobind
downPage(){
  const { pageNumber, numPages } = this.state;
  if(pageNumber<numPages){
    let pageNoDown = pageNumber;
    this.setState({ pageNumber:pageNoDown+1 });
  }
}

render() {
  const { store: { docDetail } } = this.props;
  const { pageNumber, numPages } = this.state;
  const document = nj`
    <div style="margin-bottom:30px;width:890px;height:760px;overflow-y:scroll">
      <div style="height:30px;line-height:30px;text-align:center">
        <${Button} onClick="{upPage}" style="display:inline-block;margin-right:20px;cursor:pointer">上一页</${Button}>
        <span style="display:inline-block;margin-left:5px;margin-right:25px;">第{pageNumber}页/共{numPages}页</span>
        <${Button} onClick="{downPage}" style="display:inline-block;cursor:pointer">下一页</${Button}>
      </div>
      <${Document}
        file={url}
        onLoadSuccess={onDocumentLoad}
      >
        <${Page} pageNumber={pageNumber} />
      </${Document}>
    </div>`({onDocumentLoad:this.onDocumentLoad,url:docDetail.docData.docUrl,pageNumber:pageNumber,numPages:numPages,upPage:this.upPage,downPage:this.downPage})
  return tmpls.container(this.state, this.props, this, {
    styles,
    docDetail,
    document:document
  });
}
